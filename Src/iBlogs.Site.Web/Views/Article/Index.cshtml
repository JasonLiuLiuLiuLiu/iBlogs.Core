@inject IViewService ViewService
@using iBlogs.Site.Core.Common.Extensions
@using iBlogs.Site.Core.Common.Service
@using iBlogs.Site.Core.Option
@model ArticleViewModel
@{
    ViewData["title"] = Model.Content.Title;
}
<article class="main-content page-page" itemscope itemtype="http://schema.org/Article">
    <div class="post-header">
        <h1 class="post-title" itemprop="name headline">
            <a href="@Model.Content.Permalink()">@Model.Content.Title</a>
        </h1>
        <div class="post-data">
            <time datetime="@Model.Content.CreatedStr("yyyy-MM-dd")" itemprop="datePublished">发布于 @Model.Content.CreatedStr("yyyy-MM-dd")</time>
            / @Html.Raw(Model.Content.ShowCategories()) / <a href="#comments">@Model.Content.CommentsNumStr("没有评论", "{0} 条评论")</a> /
            @Model.Content.Hits 浏览
        </div>
    </div>
    <div id="post-content" class="post-content" itemprop="articleBody">
        <p class="post-tags">@Html.Raw(Model.Content.ShowTags())</p>
        <a></a>
        @Html.Raw(Model.Content.ShowContent())
        <p class="post-info">
            本文由 <a href="">@(ViewService.SiteOption(ConfigKey.Author, "阿宇"))</a> 创作，采用 <a href="https://creativecommons.org/licenses/by/4.0/" target="_blank"
                                                                                          rel="external nofollow">知识共享署名4.0</a> 国际许可协议进行许可<br>本站文章除注明转载/出处外，均为本站原创或翻译，转载前请务必署名<br>最后编辑时间为:
            @Model.Content.ModifiedStr("yyyy/MM/dd HH:mm")
        </p>
    </div>
</article>
<div id="post-bottom-bar" class="post-bottom-bar">
    <div class="bottom-bar-inner">
        <div class="bottom-bar-items social-share left">
            <span class="bottom-bar-item">Share : </span>
            <span class="bottom-bar-item bottom-bar-facebook"><a href="https://www.facebook.com/sharer/sharer.php?u=@ViewService.SiteUrl()@Model.Content.Permalink()" target="_blank" title="@Model.Content.Title" rel="nofollow">facebook</a></span>
            <span class="bottom-bar-item bottom-bar-twitter"><a href="https://twitter.com/intent/tweet?url=@ViewService.SiteUrl()@Model.Content.Permalink()&text=@Model.Content.Title" target="_blank" title="@Model.Content.Title" rel="nofollow">Twitter</a></span>
            <span class="bottom-bar-item bottom-bar-weibo"><a href="http://service.weibo.com/share/share.php?url=@ViewService.SiteUrl()@Model.Content.Permalink()&amp;title=@Model.Content.Title" target="_blank" title="@Model.Content.Title" rel="nofollow">Weibo</a></span>
            <span class="bottom-bar-item bottom-bar-qrcode"><a href="https://cli.im/api/qrcode/code?text=@ViewService.SiteUrl()@Model.Content.Permalink()&mhid=sELPDFnok80gPHovKdI" target="_blank" rel="nofollow">QRSetCode</a></span>
        </div>
        <div class="bottom-bar-items right">
            <span class="bottom-bar-item">@Html.Raw(Model.ThePrev("←"))</span>
            <span class="bottom-bar-item">@Html.Raw(Model.TheNext("→"))</span>
            <span class="bottom-bar-item"><a href="#footer">↓</a></span>
            <span class="bottom-bar-item"><a href="#">↑</a></span>
        </div>
    </div>
</div>

@{
    var article = Model.Content;
    var comments = Model.Comments;
    <div id="@article.Id" class="comment-container">
        <div id="comments" class="clearfix">
            @if (article.AllowComment)
            {


                @if (Model.User != null)
                {
                    <span class="response">
                        Hi，<a href="@Model.User.HomeUrl" data-no-instant>@Model.User.ScreenName</a>
                        如果你想 <a href="/admin/login" title="注销" data-no-instant>注销</a> ?
                    </span>
                }


                <form method="post" id="comment-form" class="comment-form" onsubmit="return TaleComment.subComment();">
                    <input type="hidden" name="coid" id="coid" />
                    <input type="hidden" name="cid" id="cid" value="@Model.Content.Id" />
                    <input name="author" maxlength="12" id="author" class="form-control input-control clearfix"
                           placeholder="姓名 (*)" value="@Model.User?.ScreenName" required />
                    <input type="email" name="mail" id="mail" class="form-control input-control clearfix" placeholder="邮箱 (*)"
                           value="@Model.User?.Email" required />
                    <input type="url" name="url" id="url" class="form-control input-control clearfix" placeholder="网址 (http://)"
                           value="@Model.User?.HomeUrl" />
                    <textarea name="content" id="textarea" class="form-control" placeholder="客官,留下你的评论." required minlength="5" maxlength="2000"></textarea>

                    <button class="submit" id="misubmit">提交</button>
                </form>
            }
            else
            {
                <span class="response">评论已关闭.</span>
            }

            @if (comments?.Rows.Count > 0)
            {
                <ol class="comment-list">
                    @foreach (var comment in comments.Rows)
                    {
                        <li id="li-comment-@comment.Id" class="comment-body comment-parent comment-odd">
                            <div id="comment-@comment.Id}">
                                <div class="comment-view" onclick="">
                                    <div class="comment-header">
                                        <img class="avatar" src="@ViewService.Gravatar(comment.Mail)?s=80&r=G&d=" title="@comment.Author"
                                             width="80" height="80">
                                        <span class="comment-author">
                                            <a href="@comment.Url}" target="_blank" rel="external nofollow">@comment.Author</a>
                                        </span>
                                    </div>
                                    <div class="comment-content">
                                        <span class="comment-author-at"></span>
                                        <p>@comment.Content</p>
                                    </div>
                                    <div class="comment-meta">
                                        <time class="comment-time">@comment.Created.ToString("yyyy-MM-dd")</time>
                                        <span class="comment-reply">
                                            <a rel="nofollow" onclick="TaleComment.reply('@comment.Id','@comment.Author');">回复</a>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            @if (comment.Levels > 0)
                            {
                                <div class="comment-children">
                                    <ol class="comment-list">
                                        @foreach (var child in comment.Children)
                                        {
                                            <li id="li-comment-@child.Id"
                                                class="comment-body comment-child comment-level-odd comment-odd">
                                                <div id="comment-@child.Id">
                                                    <div class="comment-view">
                                                        <div class="comment-header">
                                                            <img class="avatar" src="@ViewService.Gravatar(child.Mail)?s=80&r=G&d=" title="@child.Author" width="80" height="80">
                                                            <span class="comment-author comment-by-author">
                                                                <a href="@child.Url" target="_blank" rel="external nofollow">@child.Author</a>
                                                            </span>
                                                        </div>
                                                        <div class="comment-content">
                                                            <span class="comment-author-at">
                                                                @child.CommentAt(comment)
                                                            </span>
                                                            <p>@child.Content</p>
                                                        </div>
                                                        <div class="comment-meta">
                                                            <time class="comment-time">@child.Created.ToString("yyyy-MM-dd")</time>
                                                            <span class="comment-reply">
                                                                <a rel="nofollow" onclick="TaleComment.reply('@child.Id','@child.Author');">回复</a>
                                                            </span>
                                                        </div>
                                                    </div>
                                                </div>
                                            </li>
                                        }
                                    </ol>
                                </div>
                            }
                        </li>
                    }
                </ol>
            }

            @if (comments != null)
            {
                <div class="lists-navigator clearfix">
                    <ol class="page-navigator">
                        @if (comments.HasPrevPage)
                        {
                            <li class="prev"><a href="?cp=@comments.PrevPage#comments">←</a></li>
                        }


                        @foreach (var navIndex in comments.NavPageNums)
                        {
                            <li class="@((comments.PageNum==navIndex)?"current":"")"><a href="?cp=@navIndex#comments">@navIndex</a></li>
                        }


                        @if (comments.HasNextPage)
                        {
                            <li class="next"><a href="?cp=@comments.NextPage#comments">→</a></li>
                        }
                    </ol>

                </div>
            }
        </div>
    </div>

}


<script>
    (function () {
        window.TaleComment = {
            reply: function (coid, author) {
                $('#comment-form input[name=coid]').val(coid);
                $("html,body").animate({ scrollTop: $('div.comment-container').offset().top }, 500);
                $('#comment-form #textarea').focus();
                $('#comment-form #textarea').val('@@' + author + '  ');
            },
            subComment: function () {
                $.ajax({
                    type: 'post',
                    url: '/article/comment',
                    data: $('#comment-form').serialize(),
                    async: false,
                    dataType: 'json',
                    error: function (jqXHR, status, error) {
                        if (status === 'error' && jqXHR.status === 400) {
                            alert('非法的请求');
                        } else {
                            console.log('Request Error:', error)
                        }
                    },
                    success: function (result) {
                        $('#comment-form input[name=coid]').val('');
                        if (result && result.success) {
                            alert('评论成功,管理员审核通过后显示');
                            window.location.reload();
                        } else {
                            if (result.msg) {
                                alert(result.msg);
                                window.location.reload();
                            }
                        }
                    }
                });
                return false;
            }
        };
    })();

    function getCommentCookie(name) {
        var arr, reg = new RegExp("(^| )" + name + "=([^;]*)(;|$)");
        if (arr = document.cookie.match(reg)) {
            return unescape(decodeURI(arr[2]));
        } else {
            return null;
        }
    }

    function addCommentInputValue() {
        document.getElementById('author').value = getCommentCookie('tale_remember_author');
        document.getElementById('mail').value = getCommentCookie('tale_remember_mail');
        document.getElementById('url').value = getCommentCookie('tale_remember_url');
    }
    addCommentInputValue();
</script>

<div id="directory-content" class="directory-content">
    <div id="directory"></div>
</div>
<script>
    $('#directory').html('');
    var postDirectoryBuild = function () {
        var postChildren = function children(childNodes, reg) {
            var result = [],
                isReg = typeof reg === 'object',
                isStr = typeof reg === 'string',
                node, i, len;
            for (i = 0, len = childNodes.length; i < len; i++) {
                node = childNodes[i];
                if ((node.nodeType === 1 || node.nodeType === 9) &&
                    (!reg ||
                        isReg && reg.test(node.tagName.toLowerCase()) ||
                        isStr && node.tagName.toLowerCase() === reg)) {
                    result.push(node);
                }
            }
            return result;
        },
            createPostDirectory = function (article, directory, isDirNum) {
                var contentArr = [],
                    titleId = [],
                    levelArr, root, level,
                    currentList, list, li, link, i, len;
                levelArr = (function (article, contentArr, titleId) {
                    var titleElem = postChildren(article.childNodes, /^h\d$/),
                        levelArr = [],
                        lastNum = 1,
                        lastRevNum = 1,
                        count = 0,
                        guid = 1,
                        id = 'directory' + (Math.random() + '').replace(/\D/, ''),
                        lastRevNum, num, elem;
                    while (titleElem.length) {
                        elem = titleElem.shift();
                        contentArr.push(elem.innerHTML);
                        num = +elem.tagName.match(/\d/)[0];
                        if (num > lastNum) {
                            levelArr.push(1);
                            lastRevNum += 1;
                        } else if (num === lastRevNum ||
                            num > lastRevNum && num <= lastNum) {
                            levelArr.push(0);
                            lastRevNum = lastRevNum;
                        } else if (num < lastRevNum) {
                            levelArr.push(num - lastRevNum);
                            lastRevNum = num;
                        }
                        count += levelArr[levelArr.length - 1];
                        lastNum = num;
                        elem.id = elem.id || (id + guid++);
                        titleId.push(elem.id);
                    }
                    if (count !== 0 && levelArr[0] === 1) levelArr[0] = 0;

                    return levelArr;
                })(article, contentArr, titleId);
                currentList = root = document.createElement('ul');
                dirNum = [0];
                for (i = 0, len = levelArr.length; i < len; i++) {
                    level = levelArr[i];
                    if (level === 1) {
                        list = document.createElement('ul');
                        if (!currentList.lastElementChild) {
                            currentList.appendChild(document.createElement('li'));
                        }
                        currentList.lastElementChild.appendChild(list);
                        currentList = list;
                        dirNum.push(0);
                    } else if (level < 0) {
                        level *= 2;
                        while (level++) {
                            if (level % 2) dirNum.pop();
                            currentList = currentList.parentNode;
                        }
                    }
                    dirNum[dirNum.length - 1]++;
                    li = document.createElement('li');
                    link = document.createElement('a');
                    link.href = '#' + titleId[i];
                    link.innerHTML = !isDirNum ? contentArr[i] :
                        dirNum.join('.') + ' ' + contentArr[i];
                    li.appendChild(link);
                    currentList.appendChild(li);
                }
                directory.appendChild(root);
            };
        createPostDirectory(document.getElementById('post-content'), document.getElementById('directory'), true);
    };
    postDirectoryBuild();
</script>

<script>
    var postDirectory = new Headroom(document.getElementById("directory-content"), {
        tolerance: 0,
        offset: 100,
        classes: {
            initial: "initial",
            pinned: "pinned",
            unpinned: "unpinned"
        }
    });
</script>